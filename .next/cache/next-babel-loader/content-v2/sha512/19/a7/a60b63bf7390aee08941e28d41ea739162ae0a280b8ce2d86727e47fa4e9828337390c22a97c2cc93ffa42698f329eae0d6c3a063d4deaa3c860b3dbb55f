{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const layoutInitialState = {\n  isHeaderFixed: false\n};\nexport const layoutReducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_HEADER\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isHeaderFixed: action.payload\n      });\n\n    default:\n      {}\n  }\n};","map":{"version":3,"sources":["D:/CODE/j_fr_frontend/src/reducers/layoutReducer.ts"],"names":["layoutInitialState","isHeaderFixed","layoutReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,OAAO,MAAMA,kBAAkB,GAAG;AAChCC,EAAAA,aAAa,EAAE;AADiB,CAA3B;AAOP,OAAO,MAAMC,aAA+D,GAAG,CAC7EC,KAD6E,EAE7EC,MAF6E,KAG1E;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,6CACKF,KADL;AAEEF,QAAAA,aAAa,EAAEG,MAAM,CAACE;AAFxB;;AAKF;AAAS,OACR;AARH;AAUD,CAdM","sourcesContent":["export const layoutInitialState = {\r\n  isHeaderFixed: false,\r\n};\r\n\r\nexport type layoutStateType = typeof layoutInitialState;\r\nexport type layoutActionType = { type: \"TOGGLE_HEADER\"; payload: boolean };\r\n\r\nexport const layoutReducer: React.Reducer<layoutStateType, layoutActionType> = (\r\n  state: layoutStateType,\r\n  action: layoutActionType\r\n) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_HEADER\":\r\n      return {\r\n        ...state,\r\n        isHeaderFixed: action.payload,\r\n      };\r\n\r\n    default: {\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}