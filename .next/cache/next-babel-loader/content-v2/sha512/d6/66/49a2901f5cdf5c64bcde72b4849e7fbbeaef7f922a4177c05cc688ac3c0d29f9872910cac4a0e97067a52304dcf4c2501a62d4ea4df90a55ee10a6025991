{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\j_fr_frontend\\\\src\\\\components\\\\categories\\\\Categories.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport CategoryDropdown from \"./CategoryDropdown\";\nimport { StyledCategory } from \"./CategoryStyle\";\n\nconst Categories = ({\n  open: isOpen,\n  children\n}) => {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(isOpen);\n  const popoverRef = useRef(open);\n  popoverRef.current = open;\n\n  const toggleMenu = e => {\n    e.stopPropagation();\n    if (!isOpen) setOpen(!open);\n  };\n\n  const handleDocumentClick = () => {\n    if (popoverRef.current && !isOpen) setOpen(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"click\", handleDocumentClick);\n    return () => {\n      window.removeEventListener(\"click\", handleDocumentClick);\n    };\n  }, []);\n  return __jsx(StyledCategory, {\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.cloneElement(children, {\n    open,\n    className: `${children.props.className} cursor-pointer`,\n    onClick: toggleMenu\n  }), __jsx(CategoryDropdown, {\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Categories;","map":{"version":3,"sources":["D:/CODE/j_fr_frontend/src/components/categories/Categories.tsx"],"names":["React","useEffect","useRef","useState","CategoryDropdown","StyledCategory","Categories","open","isOpen","children","setOpen","popoverRef","current","toggleMenu","e","stopPropagation","handleDocumentClick","window","addEventListener","removeEventListener","cloneElement","className","props","onClick"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAOA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAEC,MAAR;AAAgBC,EAAAA;AAAhB,CAAD,KAAgC;AAC5E,QAAM;AAAA,OAACF,IAAD;AAAA,OAAOG;AAAP,MAAkBP,QAAQ,CAACK,MAAD,CAAhC;AACA,QAAMG,UAAU,GAAGT,MAAM,CAACK,IAAD,CAAzB;AACAI,EAAAA,UAAU,CAACC,OAAX,GAAqBL,IAArB;;AAEA,QAAMM,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,eAAF;AACA,QAAI,CAACP,MAAL,EAAaE,OAAO,CAAC,CAACH,IAAF,CAAP;AACd,GAHD;;AAKA,QAAMS,mBAAmB,GAAG,MAAM;AAChC,QAAIL,UAAU,CAACC,OAAX,IAAsB,CAACJ,MAA3B,EAAmCE,OAAO,CAAC,KAAD,CAAP;AACpC,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,mBAAjC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,mBAApC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SACE,MAAC,cAAD;AAAgB,IAAA,IAAI,EAAET,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACGP,KAAK,CAACoB,YAAN,CAAmBX,QAAnB,EAA6B;AAC5BF,IAAAA,IAD4B;AAE5Bc,IAAAA,SAAS,EAAG,GAAEZ,QAAQ,CAACa,KAAT,CAAeD,SAAU,iBAFX;AAG5BE,IAAAA,OAAO,EAAEV;AAHmB,GAA7B,CADH,EAME,MAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEN,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CA/BD;;AAiCA,eAAeD,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport CategoryDropdown from \"./CategoryDropdown\";\r\nimport { StyledCategory } from \"./CategoryStyle\";\r\n\r\nexport interface CategoriesProps {\r\n  open?: boolean;\r\n  children: React.ReactElement;\r\n}\r\n\r\nconst Categories: React.FC<CategoriesProps> = ({ open: isOpen, children }) => {\r\n  const [open, setOpen] = useState(isOpen);\r\n  const popoverRef = useRef(open);\r\n  popoverRef.current = open;\r\n\r\n  const toggleMenu = (e) => {\r\n    e.stopPropagation();\r\n    if (!isOpen) setOpen(!open);\r\n  };\r\n\r\n  const handleDocumentClick = () => {\r\n    if (popoverRef.current && !isOpen) setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", handleDocumentClick);\r\n    return () => {\r\n      window.removeEventListener(\"click\", handleDocumentClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyledCategory open={open}>\r\n      {React.cloneElement(children, {\r\n        open,\r\n        className: `${children.props.className} cursor-pointer`,\r\n        onClick: toggleMenu,\r\n      })}\r\n      <CategoryDropdown open={open} />\r\n    </StyledCategory>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n"]},"metadata":{},"sourceType":"module"}