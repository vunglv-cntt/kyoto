{"ast":null,"code":"import _extends from \"D:/CODE/j_fr_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"D:/CODE/j_fr_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\CODE\\\\j_fr_frontend\\\\src\\\\components\\\\Menu.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport systemCss from \"@styled-system/css\";\nimport { themeGet } from \"@styled-system/theme-get\";\nimport { cloneElement, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { variant } from \"styled-system\";\nvar StyledMenu = styled.div(systemCss({\n  position: \"relative\",\n  \".menu-item-holder\": {\n    paddingTop: \"0.5rem\",\n    paddingBottom: \"0.5rem\",\n    minWidth: \"200px\",\n    position: \"absolute\",\n    borderRadius: \"6px\",\n    top: \"calc(100% + 0.5rem)\",\n    backgroundColor: themeGet(\"body.paper\", \"#ffffff\"),\n    boxShadow: themeGet(\"shadows.3\", \"0 6px 12px rgba(0, 0, 0, 0.16)\"),\n    zIndex: 100\n  }\n}), variant({\n  prop: \"direction\",\n  variants: {\n    left: {\n      \".menu-item-holder\": {\n        left: 0,\n        right: \"auto\"\n      }\n    },\n    right: {\n      \".menu-item-holder\": {\n        left: \"auto\",\n        right: 0\n      }\n    }\n  }\n}));\n_c = StyledMenu;\n\nvar Menu = function Menu(_ref) {\n  _s();\n\n  var handler = _ref.handler,\n      children = _ref.children,\n      direction = _ref.direction,\n      props = _objectWithoutProperties(_ref, [\"handler\", \"children\", \"direction\"]);\n\n  var _useState = useState(false),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var popoverRef = useRef(show);\n  popoverRef.current = show;\n\n  var handleDocumentClick = function handleDocumentClick() {\n    if (popoverRef.current) setShow(false);\n  };\n\n  var togglePopover = function togglePopover(e) {\n    e.stopPropagation();\n    setShow(!show);\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"click\", handleDocumentClick);\n    return function () {\n      window.removeEventListener(\"click\", handleDocumentClick);\n    };\n  }, []);\n  return __jsx(StyledMenu, _extends({\n    direction: direction\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/cloneElement(handler, {\n    onClick: togglePopover\n  }), show && __jsx(\"div\", {\n    className: \"menu-item-holder\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }\n  }, children));\n};\n\n_s(Menu, \"eDZNtdcWuXNolOchEJwM0OoOUtw=\");\n\n_c2 = Menu;\nMenu.defaultProps = {\n  direction: \"left\"\n};\nexport default Menu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledMenu\");\n$RefreshReg$(_c2, \"Menu\");","map":{"version":3,"sources":["D:/CODE/j_fr_frontend/src/components/Menu.tsx"],"names":["systemCss","themeGet","cloneElement","useEffect","useRef","useState","styled","variant","StyledMenu","div","position","paddingTop","paddingBottom","minWidth","borderRadius","top","backgroundColor","boxShadow","zIndex","prop","variants","left","right","Menu","handler","children","direction","props","show","setShow","popoverRef","current","handleDocumentClick","togglePopover","e","stopPropagation","window","addEventListener","removeEventListener","onClick","defaultProps"],"mappings":"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","sourcesContent":["import systemCss from \"@styled-system/css\";\r\nimport { themeGet } from \"@styled-system/theme-get\";\r\nimport { cloneElement, useEffect, useRef, useState } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\nimport { variant } from \"styled-system\";\r\n\r\ninterface MenuProps {\r\n  direction?: \"left\" | \"right\";\r\n  handler: any;\r\n  children: any;\r\n  className?: string;\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst StyledMenu = styled.div<{ direction: string }>(\r\n  systemCss({\r\n    position: \"relative\",\r\n    \".menu-item-holder\": {\r\n      paddingTop: \"0.5rem\",\r\n      paddingBottom: \"0.5rem\",\r\n      minWidth: \"200px\",\r\n      position: \"absolute\",\r\n      borderRadius: \"6px\",\r\n      top: \"calc(100% + 0.5rem)\",\r\n      backgroundColor: themeGet(\"body.paper\", \"#ffffff\"),\r\n      boxShadow: themeGet(\"shadows.3\", \"0 6px 12px rgba(0, 0, 0, 0.16)\"),\r\n      zIndex: 100,\r\n    },\r\n  }),\r\n  variant({\r\n    prop: \"direction\",\r\n    variants: {\r\n      left: {\r\n        \".menu-item-holder\": {\r\n          left: 0,\r\n          right: \"auto\",\r\n        },\r\n      },\r\n      right: {\r\n        \".menu-item-holder\": {\r\n          left: \"auto\",\r\n          right: 0,\r\n        },\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Menu: React.FC<MenuProps> = ({\r\n  handler,\r\n  children,\r\n  direction,\r\n  ...props\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const popoverRef = useRef(show);\r\n  popoverRef.current = show;\r\n\r\n  const handleDocumentClick = () => {\r\n    if (popoverRef.current) setShow(false);\r\n  };\r\n\r\n  const togglePopover = (e) => {\r\n    e.stopPropagation();\r\n    setShow(!show);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", handleDocumentClick);\r\n    return () => {\r\n      window.removeEventListener(\"click\", handleDocumentClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyledMenu direction={direction} {...props}>\r\n      {cloneElement(handler, { onClick: togglePopover })}\r\n      {show && <div className=\"menu-item-holder\">{children}</div>}\r\n    </StyledMenu>\r\n  );\r\n};\r\n\r\nMenu.defaultProps = {\r\n  direction: \"left\",\r\n};\r\n\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}