{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst CHANGE_CART_AMOUNT = \"CHANGE_CART_AMOUNT\";\nexport const cartInitialState = {\n  cartList: [{\n    price: 250,\n    name: \"Lord 2019\",\n    imgUrl: \"/assets/images/products/Automotive/1.Ford2019.png\",\n    id: \"7222243834583537\",\n    qty: 1\n  }, {\n    price: 250,\n    name: \"Xorsche 2020\",\n    imgUrl: \"/assets/images/products/Automotive/28.Porsche2020.png\",\n    id: \"38553442244076086\",\n    qty: 1\n  }, {\n    price: 250,\n    name: \"Heavy 20kt Gold Necklace\",\n    imgUrl: \"/assets/images/products/Fashion/Jewellery/9.Heavy20ktGoldNecklace.png\",\n    id: \"9573201630529315\",\n    qty: 1\n  }]\n};\nexport const cartReducer = (state, action) => {\n  switch (action.type) {\n    case CHANGE_CART_AMOUNT:\n      let cartList = state.cartList;\n      let cartItem = action.payload;\n      let exist = cartList.find(item => item.id === cartItem.id);\n      if (cartItem.qty < 1) return {\n        cartList: cartList.filter(item => item.id !== cartItem.id)\n      };else if (exist) return {\n        cartList: cartList.map(item => {\n          if (item.id === cartItem.id) return _objectSpread(_objectSpread({}, item), {}, {\n            qty: cartItem.qty\n          });else return item;\n        })\n      };else return {\n        cartList: [...cartList, cartItem]\n      };\n\n    default:\n      {}\n  }\n};","map":{"version":3,"sources":["D:/CODE/kyoto-fronend/src/reducers/cartReducer.ts"],"names":["CHANGE_CART_AMOUNT","cartInitialState","cartList","price","name","imgUrl","id","qty","cartReducer","state","action","type","cartItem","payload","exist","find","item","filter","map"],"mappings":";;;;;;AAAA,MAAMA,kBAAkB,GAAG,oBAA3B;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,GADT;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,MAAM,EAAE,mDAHV;AAIEC,IAAAA,EAAE,EAAE,kBAJN;AAKEC,IAAAA,GAAG,EAAE;AALP,GADQ,EAQR;AACEJ,IAAAA,KAAK,EAAE,GADT;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,MAAM,EAAE,uDAHV;AAIEC,IAAAA,EAAE,EAAE,mBAJN;AAKEC,IAAAA,GAAG,EAAE;AALP,GARQ,EAeR;AACEJ,IAAAA,KAAK,EAAE,GADT;AAEEC,IAAAA,IAAI,EAAE,0BAFR;AAGEC,IAAAA,MAAM,EACJ,uEAJJ;AAKEC,IAAAA,EAAE,EAAE,kBALN;AAMEC,IAAAA,GAAG,EAAE;AANP,GAfQ;AADoB,CAAzB;AA4CP,OAAO,MAAMC,WAAyD,GAAG,CACvEC,KADuE,EAEvEC,MAFuE,KAGpE;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,kBAAL;AACE,UAAIE,QAAQ,GAAGO,KAAK,CAACP,QAArB;AACA,UAAIU,QAAQ,GAAGF,MAAM,CAACG,OAAtB;AACA,UAAIC,KAAK,GAAGZ,QAAQ,CAACa,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYM,QAAQ,CAACN,EAA7C,CAAZ;AAEA,UAAIM,QAAQ,CAACL,GAAT,GAAe,CAAnB,EACE,OAAO;AACLL,QAAAA,QAAQ,EAAEA,QAAQ,CAACe,MAAT,CAAiBD,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYM,QAAQ,CAACN,EAA/C;AADL,OAAP,CADF,KAIK,IAAIQ,KAAJ,EACH,OAAO;AACLZ,QAAAA,QAAQ,EAAEA,QAAQ,CAACgB,GAAT,CAAcF,IAAD,IAAU;AAC/B,cAAIA,IAAI,CAACV,EAAL,KAAYM,QAAQ,CAACN,EAAzB,EAA6B,uCAAYU,IAAZ;AAAkBT,YAAAA,GAAG,EAAEK,QAAQ,CAACL;AAAhC,aAA7B,KACK,OAAOS,IAAP;AACN,SAHS;AADL,OAAP,CADG,KAQH,OAAO;AACLd,QAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAcU,QAAd;AADL,OAAP;;AAIJ;AAAS,OACR;AAvBH;AAyBD,CA7BM","sourcesContent":["const CHANGE_CART_AMOUNT = \"CHANGE_CART_AMOUNT\";\r\n\r\nexport const cartInitialState = {\r\n  cartList: [\r\n    {\r\n      price: 250,\r\n      name: \"Lord 2019\",\r\n      imgUrl: \"/assets/images/products/Automotive/1.Ford2019.png\",\r\n      id: \"7222243834583537\",\r\n      qty: 1,\r\n    },\r\n    {\r\n      price: 250,\r\n      name: \"Xorsche 2020\",\r\n      imgUrl: \"/assets/images/products/Automotive/28.Porsche2020.png\",\r\n      id: \"38553442244076086\",\r\n      qty: 1,\r\n    },\r\n    {\r\n      price: 250,\r\n      name: \"Heavy 20kt Gold Necklace\",\r\n      imgUrl:\r\n        \"/assets/images/products/Fashion/Jewellery/9.Heavy20ktGoldNecklace.png\",\r\n      id: \"9573201630529315\",\r\n      qty: 1,\r\n    },\r\n  ],\r\n};\r\n\r\nexport type CartItem = {\r\n  id: string | number;\r\n  name: string;\r\n  qty: number;\r\n  price: number;\r\n  imgUrl?: string;\r\n};\r\n\r\nexport type cartStateType = {\r\n  cartList: CartItem[];\r\n};\r\n\r\nexport type cartActionType = {\r\n  type: typeof CHANGE_CART_AMOUNT;\r\n  payload: CartItem;\r\n};\r\n\r\nexport const cartReducer: React.Reducer<cartStateType, cartActionType> = (\r\n  state: cartStateType,\r\n  action: cartActionType\r\n) => {\r\n  switch (action.type) {\r\n    case CHANGE_CART_AMOUNT:\r\n      let cartList = state.cartList;\r\n      let cartItem = action.payload;\r\n      let exist = cartList.find((item) => item.id === cartItem.id);\r\n\r\n      if (cartItem.qty < 1)\r\n        return {\r\n          cartList: cartList.filter((item) => item.id !== cartItem.id),\r\n        };\r\n      else if (exist)\r\n        return {\r\n          cartList: cartList.map((item) => {\r\n            if (item.id === cartItem.id) return { ...item, qty: cartItem.qty };\r\n            else return item;\r\n          }),\r\n        };\r\n      else\r\n        return {\r\n          cartList: [...cartList, cartItem],\r\n        };\r\n\r\n    default: {\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}