{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styled from \"styled-components\";\nimport { compose, flexbox } from \"styled-system\";\nconst StyledGrid = styled.div(({\n  container,\n  item,\n  spacing,\n  horizontal_spacing,\n  vertical_spacing,\n  xl,\n  lg,\n  md,\n  sm,\n  xs,\n  containerHeight\n}) => {\n  let mediaProps = {\n    xl,\n    lg,\n    md,\n    sm,\n    xs\n  };\n  let style = {};\n\n  if (container) {\n    style = {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      height: containerHeight,\n      margin: spacing ? `-${spacing / 2 * 0.25}rem` : \"unset\"\n    };\n\n    if (horizontal_spacing) {\n      style.marginLeft = `-${horizontal_spacing / 2 * 0.25}rem`;\n      style.marginRight = `-${horizontal_spacing / 2 * 0.25}rem`;\n    }\n\n    if (vertical_spacing) {\n      style.marginTop = `-${vertical_spacing / 2 * 0.25}rem`;\n      style.marginBottom = `-${vertical_spacing / 2 * 0.25}rem`;\n    }\n  } else if (item) {\n    if (spacing) style.padding = `${spacing / 2 * 0.25}rem`;\n\n    if (horizontal_spacing) {\n      style.paddingLeft = `${horizontal_spacing / 2 * 0.25}rem`;\n      style.paddingRight = `${horizontal_spacing / 2 * 0.25}rem`;\n    }\n\n    if (vertical_spacing) {\n      style.paddingTop = `${vertical_spacing / 2 * 0.25}rem`;\n      style.paddingBottom = `${vertical_spacing / 2 * 0.25}rem`;\n    }\n\n    for (const key in mediaSize) {\n      if (mediaProps[key]) {\n        style = _objectSpread(_objectSpread({}, style), {}, {\n          [`@media only screen and (min-width: ${mediaSize[key]}px)`]: {\n            width: `${mediaProps[key] / 12 * 100}%`\n          }\n        });\n      }\n    }\n  }\n\n  return style;\n}, compose(flexbox));\nconst mediaSize = {\n  xs: 0,\n  sm: 426,\n  md: 769,\n  lg: 1025,\n  xl: 1441\n};\nexport default StyledGrid;","map":{"version":3,"sources":["D:/CODE/j_fr_frontend/src/components/grid/GridStyle.tsx"],"names":["styled","compose","flexbox","StyledGrid","div","container","item","spacing","horizontal_spacing","vertical_spacing","xl","lg","md","sm","xs","containerHeight","mediaProps","style","display","flexWrap","height","margin","marginLeft","marginRight","marginTop","marginBottom","padding","paddingLeft","paddingRight","paddingTop","paddingBottom","key","mediaSize","width"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport { compose, flexbox } from \"styled-system\";\r\nimport { GridProps } from \"./Grid\";\r\n\r\nconst StyledGrid = styled.div<GridProps>(\r\n  ({\r\n    container,\r\n    item,\r\n    spacing,\r\n    horizontal_spacing,\r\n    vertical_spacing,\r\n    xl,\r\n    lg,\r\n    md,\r\n    sm,\r\n    xs,\r\n    containerHeight,\r\n  }) => {\r\n    let mediaProps = { xl, lg, md, sm, xs };\r\n    let style: any = {};\r\n\r\n    if (container) {\r\n      style = {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        height: containerHeight,\r\n        margin: spacing ? `-${(spacing / 2) * 0.25}rem` : \"unset\",\r\n      };\r\n\r\n      if (horizontal_spacing) {\r\n        style.marginLeft = `-${(horizontal_spacing / 2) * 0.25}rem`;\r\n        style.marginRight = `-${(horizontal_spacing / 2) * 0.25}rem`;\r\n      }\r\n      if (vertical_spacing) {\r\n        style.marginTop = `-${(vertical_spacing / 2) * 0.25}rem`;\r\n        style.marginBottom = `-${(vertical_spacing / 2) * 0.25}rem`;\r\n      }\r\n    } else if (item) {\r\n      if (spacing) style.padding = `${(spacing / 2) * 0.25}rem`;\r\n\r\n      if (horizontal_spacing) {\r\n        style.paddingLeft = `${(horizontal_spacing / 2) * 0.25}rem`;\r\n        style.paddingRight = `${(horizontal_spacing / 2) * 0.25}rem`;\r\n      }\r\n\r\n      if (vertical_spacing) {\r\n        style.paddingTop = `${(vertical_spacing / 2) * 0.25}rem`;\r\n        style.paddingBottom = `${(vertical_spacing / 2) * 0.25}rem`;\r\n      }\r\n\r\n      for (const key in mediaSize) {\r\n        if (mediaProps[key]) {\r\n          style = {\r\n            ...style,\r\n            [`@media only screen and (min-width: ${mediaSize[key]}px)`]: {\r\n              width: `${(mediaProps[key] / 12) * 100}%`,\r\n            },\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return style;\r\n  },\r\n  compose(flexbox)\r\n);\r\n\r\nconst mediaSize = {\r\n  xs: 0,\r\n  sm: 426,\r\n  md: 769,\r\n  lg: 1025,\r\n  xl: 1441,\r\n};\r\n\r\nexport default StyledGrid;\r\n"]},"metadata":{},"sourceType":"module"}