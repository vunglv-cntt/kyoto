{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\j_fr_frontend\\\\src\\\\components\\\\navbar\\\\Navbar.tsx\";\nvar __jsx = React.createElement;\nimport Box from \"@component/Box\";\nimport Card from \"@component/Card\";\nimport MenuItem from \"@component/MenuItem\";\nimport navbarNavigations from \"@data/navbarNavigations\";\nimport React from \"react\";\nimport Container from \"../Container\";\nimport FlexBox from \"../FlexBox\";\nimport NavLink from \"../nav-link/NavLink\";\nimport { Span } from \"../Typography\";\nimport StyledNavbar from \"./NavbarStyle\";\n\nconst Navbar = ({\n  navListOpen\n}) => {\n  const renderNestedNav = (list, isRoot = false) => {\n    return list === null || list === void 0 ? void 0 : list.map(nav => {\n      if (isRoot) {\n        if (nav.url && nav.extLink) return __jsx(NavLink, {\n          className: \"nav-link\",\n          href: nav.url,\n          key: nav.title,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }\n        }, nav.title);else if (nav.url) return __jsx(NavLink, {\n          className: \"nav-link\",\n          href: nav.url,\n          key: nav.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }, nav.title);\n        if (nav.child) return __jsx(FlexBox, {\n          className: \"root\",\n          position: \"relative\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          key: nav.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }\n        }, __jsx(Span, {\n          className: \"nav-link\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }\n        }, nav.title), __jsx(Box, {\n          className: \"root-child\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }\n        }, __jsx(Card, {\n          mt: \"1.25rem\",\n          py: \"0.5rem\",\n          boxShadow: \"large\",\n          minWidth: \"230px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        }, renderNestedNav(nav.child))));\n      } else {\n        if (nav.url) return __jsx(NavLink, {\n          href: nav.url,\n          key: nav.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, __jsx(MenuItem, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }\n        }, __jsx(Span, {\n          fontSize: \"14px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }, nav.title)));\n        if (nav.child) return __jsx(Box, {\n          className: \"parent\",\n          position: \"relative\",\n          minWidth: \"230px\",\n          key: nav.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        }, __jsx(MenuItem, {\n          color: \"gray.700\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }\n        }, __jsx(Span, {\n          flex: \"1 1 0\",\n          fontSize: \"14px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }, nav.title)), __jsx(Box, {\n          className: \"child\",\n          pl: \"0.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }\n        }, __jsx(Card, {\n          py: \"0.5rem\",\n          boxShadow: \"large\",\n          minWidth: \"230px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }\n        }, renderNestedNav(nav.child))));\n      }\n    });\n  };\n\n  return __jsx(StyledNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(FlexBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, renderNestedNav(navbarNavigations, true))));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["D:/CODE/j_fr_frontend/src/components/navbar/Navbar.tsx"],"names":["Box","Card","MenuItem","navbarNavigations","React","Container","FlexBox","NavLink","Span","StyledNavbar","Navbar","navListOpen","renderNestedNav","list","isRoot","map","nav","url","extLink","title","child"],"mappings":"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","sourcesContent":["import Box from \"@component/Box\";\r\nimport Card from \"@component/Card\";\r\nimport MenuItem from \"@component/MenuItem\";\r\nimport navbarNavigations from \"@data/navbarNavigations\";\r\nimport React from \"react\";\r\nimport Button from \"../buttons/Button\";\r\nimport Container from \"../Container\";\r\nimport FlexBox from \"../FlexBox\";\r\nimport NavLink from \"../nav-link/NavLink\";\r\nimport Typography, { Span } from \"../Typography\";\r\nimport StyledNavbar from \"./NavbarStyle\";\r\n\r\nexport interface NavbarProps {\r\n  navListOpen?: boolean;\r\n}\r\n\r\ninterface Nav {\r\n  title: string;\r\n  url: string;\r\n  child: Nav[];\r\n  extLink?: boolean;\r\n}\r\n\r\nconst Navbar: React.FC<NavbarProps> = ({ navListOpen }) => {\r\n  const renderNestedNav = (list: any[], isRoot = false) => {\r\n    return list?.map((nav: Nav) => {\r\n      if (isRoot) {\r\n        if (nav.url && nav.extLink)\r\n          return (\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              href={nav.url}\r\n              key={nav.title}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {nav.title}\r\n            </NavLink>\r\n          );\r\n        else if (nav.url)\r\n          return (\r\n            <NavLink className=\"nav-link\" href={nav.url} key={nav.title}>\r\n              {nav.title}\r\n            </NavLink>\r\n          );\r\n        if (nav.child)\r\n          return (\r\n            <FlexBox\r\n              className=\"root\"\r\n              position=\"relative\"\r\n              flexDirection=\"column\"\r\n              alignItems=\"center\"\r\n              key={nav.title}\r\n            >\r\n              <Span className=\"nav-link\">{nav.title}</Span>\r\n              <Box className=\"root-child\">\r\n                <Card\r\n                  mt=\"1.25rem\"\r\n                  py=\"0.5rem\"\r\n                  boxShadow=\"large\"\r\n                  minWidth=\"230px\"\r\n                >\r\n                  {renderNestedNav(nav.child)}\r\n                </Card>\r\n              </Box>\r\n            </FlexBox>\r\n          );\r\n      } else {\r\n        if (nav.url)\r\n          return (\r\n            <NavLink href={nav.url} key={nav.title}>\r\n              <MenuItem>\r\n                <Span fontSize=\"14px\">{nav.title}</Span>\r\n              </MenuItem>\r\n            </NavLink>\r\n          );\r\n\r\n        if (nav.child)\r\n          return (\r\n            <Box\r\n              className=\"parent\"\r\n              position=\"relative\"\r\n              minWidth=\"230px\"\r\n              key={nav.title}\r\n            >\r\n              <MenuItem color=\"gray.700\">\r\n                <Span flex=\"1 1 0\" fontSize=\"14px\">\r\n                  {nav.title}\r\n                </Span>\r\n             \r\n              </MenuItem>\r\n              <Box className=\"child\" pl=\"0.5rem\">\r\n                <Card py=\"0.5rem\" boxShadow=\"large\" minWidth=\"230px\">\r\n                  {renderNestedNav(nav.child)}\r\n                </Card>\r\n              </Box>\r\n            </Box>\r\n          );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <StyledNavbar>\r\n      <Container\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        height=\"100%\"\r\n      >\r\n        <FlexBox>{renderNestedNav(navbarNavigations, true)}</FlexBox>\r\n      </Container>\r\n    </StyledNavbar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}