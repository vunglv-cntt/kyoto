{"ast":null,"code":"import _extends from \"D:/CODE/j_fr_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"D:/CODE/j_fr_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\CODE\\\\j_fr_frontend\\\\src\\\\components\\\\nav-link\\\\NavLink.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport StyledNavLink from \"./NavLinkStyle\";\n\nvar NavLink = function NavLink(_ref) {\n  _s();\n\n  var href = _ref.href,\n      as = _ref.as,\n      children = _ref.children,\n      style = _ref.style,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"href\", \"as\", \"children\", \"style\", \"className\"]);\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname;\n\n  var checkRouteMatch = function checkRouteMatch() {\n    if (href === \"/\") return pathname === href;\n    return pathname.includes(href);\n  };\n\n  return __jsx(Link, {\n    href: href,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(StyledNavLink, _extends({\n    className: className,\n    href: href,\n    isCurrentRoute: checkRouteMatch(),\n    style: style\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), children));\n};\n\n_s(NavLink, \"QpP2vYJstxsDz0K+Qwttl8PPVoY=\", false, function () {\n  return [useRouter];\n});\n\n_c = NavLink;\nexport default NavLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavLink\");","map":{"version":3,"sources":["D:/CODE/j_fr_frontend/src/components/nav-link/NavLink.tsx"],"names":["Link","useRouter","React","StyledNavLink","NavLink","href","as","children","style","className","props","pathname","checkRouteMatch","includes"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAA4C,OAA5C;AAGA,OAAOC,aAAP,MAA0B,gBAA1B;;AASA,IAAMC,OAEL,GAAG,SAFEA,OAEF,OAAwD;AAAA;;AAAA,MAArDC,IAAqD,QAArDA,IAAqD;AAAA,MAA/CC,EAA+C,QAA/CA,EAA+C;AAAA,MAA3CC,QAA2C,QAA3CA,QAA2C;AAAA,MAAjCC,KAAiC,QAAjCA,KAAiC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAZC,KAAY;;AAAA,mBACvCT,SAAS,EAD8B;AAAA,MACpDU,QADoD,cACpDA,QADoD;;AAG1D,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIP,IAAI,KAAK,GAAb,EAAkB,OAAOM,QAAQ,KAAKN,IAApB;AAClB,WAAOM,QAAQ,CAACE,QAAT,CAAkBR,IAAlB,CAAP;AACD,GAHD;;AAKA,SACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,SAAS,EAAEI,SADb;AAEE,IAAA,IAAI,EAAEJ,IAFR;AAGE,IAAA,cAAc,EAAEO,eAAe,EAHjC;AAIE,IAAA,KAAK,EAAEJ;AAJT,KAKME,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGH,QAPH,CADF,CADF;AAaD,CAvBD;;GAAMH,O;UAGeH,S;;;KAHfG,O;AAyBN,eAAeA,OAAf","sourcesContent":["import Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { AnchorHTMLAttributes } from \"react\";\r\nimport { CSSProperties } from \"styled-components\";\r\nimport { ColorProps, SpaceProps } from \"styled-system\";\r\nimport StyledNavLink from \"./NavLinkStyle\";\r\n\r\nexport interface NavLinkProps extends SpaceProps, ColorProps {\r\n  href: string;\r\n  as?: string;\r\n  style?: CSSProperties;\r\n  className?: string;\r\n}\r\n\r\nconst NavLink: React.FC<\r\n  NavLinkProps & AnchorHTMLAttributes<HTMLAnchorElement>\r\n> = ({ href, as, children, style, className, ...props }) => {\r\n  let { pathname } = useRouter();\r\n\r\n  const checkRouteMatch = () => {\r\n    if (href === \"/\") return pathname === href;\r\n    return pathname.includes(href);\r\n  };\r\n\r\n  return (\r\n    <Link href={href}>\r\n      <StyledNavLink\r\n        className={className}\r\n        href={href}\r\n        isCurrentRoute={checkRouteMatch()}\r\n        style={style}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </StyledNavLink>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavLink;\r\n"]},"metadata":{},"sourceType":"module"}