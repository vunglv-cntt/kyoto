{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\j_fr_frontend\\\\src\\\\components\\\\grid\\\\Grid.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Children, cloneElement } from \"react\";\nimport StyledGrid from \"./GridStyle\";\n\nconst Grid = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  let childList = children;\n\n  if (props.container) {\n    childList = Children.map(children, child => {\n      return /*#__PURE__*/cloneElement(child, {\n        spacing: props.spacing,\n        horizontal_spacing: props.horizontal_spacing,\n        vertical_spacing: props.vertical_spacing\n      });\n    });\n  }\n\n  return __jsx(StyledGrid, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }), childList);\n};\n\nGrid.defaultProps = {\n  spacing: 0,\n  containerHeight: \"unset\"\n};\nexport default Grid;","map":{"version":3,"sources":["D:/CODE/j_fr_frontend/src/components/grid/Grid.tsx"],"names":["React","Children","cloneElement","StyledGrid","Grid","children","props","childList","container","map","child","spacing","horizontal_spacing","vertical_spacing","defaultProps","containerHeight"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,YAA1B,QAA4D,OAA5D;AAEA,OAAOC,UAAP,MAAuB,aAAvB;;AAmBA,MAAMC,IAAwC,GAAG,UAA4B;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AAAA,MAAZC,KAAY;;AAC3E,MAAIC,SAAS,GAAGF,QAAhB;;AAEA,MAAIC,KAAK,CAACE,SAAV,EAAqB;AACnBD,IAAAA,SAAS,GAAGN,QAAQ,CAACQ,GAAT,CAAaJ,QAAb,EAAwBK,KAAD,IAAW;AAC5C,0BAAOR,YAAY,CAACQ,KAAD,EAAQ;AACzBC,QAAAA,OAAO,EAAEL,KAAK,CAACK,OADU;AAEzBC,QAAAA,kBAAkB,EAAEN,KAAK,CAACM,kBAFD;AAGzBC,QAAAA,gBAAgB,EAAEP,KAAK,CAACO;AAHC,OAAR,CAAnB;AAKD,KANW,CAAZ;AAOD;;AAED,SAAO,MAAC,UAAD,eAAgBP,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAwBC,SAAxB,CAAP;AACD,CAdD;;AAgBAH,IAAI,CAACU,YAAL,GAAoB;AAClBH,EAAAA,OAAO,EAAE,CADS;AAElBI,EAAAA,eAAe,EAAE;AAFC,CAApB;AAKA,eAAeX,IAAf","sourcesContent":["import React, { Children, cloneElement, ReactElement } from \"react\";\r\nimport { FlexboxProps } from \"styled-system\";\r\nimport StyledGrid from \"./GridStyle\";\r\n\r\nexport interface GridProps {\r\n  container?: boolean;\r\n  containerHeight?: string;\r\n  item?: boolean;\r\n  xl?: number;\r\n  lg?: number;\r\n  md?: number;\r\n  sm?: number;\r\n  xs?: number;\r\n  spacing?: number;\r\n  horizontal_spacing?: number;\r\n  vertical_spacing?: number;\r\n  className?: string;\r\n  children: ReactElement<GridProps>[] | any;\r\n  [key: string]: unknown;\r\n}\r\n\r\nconst Grid: React.FC<GridProps & FlexboxProps> = ({ children, ...props }) => {\r\n  let childList = children;\r\n\r\n  if (props.container) {\r\n    childList = Children.map(children, (child) => {\r\n      return cloneElement(child, {\r\n        spacing: props.spacing,\r\n        horizontal_spacing: props.horizontal_spacing,\r\n        vertical_spacing: props.vertical_spacing,\r\n      });\r\n    });\r\n  }\r\n\r\n  return <StyledGrid {...props}>{childList}</StyledGrid>;\r\n};\r\n\r\nGrid.defaultProps = {\r\n  spacing: 0,\r\n  containerHeight: \"unset\",\r\n};\r\n\r\nexport default Grid;\r\n"]},"metadata":{},"sourceType":"module"}