{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\j_fr_frontend\\\\src\\\\components\\\\sidenav\\\\Sidenav.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { cloneElement, Fragment, useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { StyledSidenav } from \"./SidenavStyle\";\n\nvar Sidenav = function Sidenav(_ref) {\n  _s();\n\n  var _handle$props2;\n\n  var position = _ref.position,\n      open = _ref.open,\n      width = _ref.width,\n      scroll = _ref.scroll,\n      handle = _ref.handle,\n      children = _ref.children,\n      toggleSidenav = _ref.toggleSidenav;\n\n  var _useState = useState(open),\n      sidenavOpen = _useState[0],\n      setSidenavOpen = _useState[1];\n\n  var handleModalContentClick = function handleModalContentClick(e) {\n    e.stopPropagation();\n  };\n\n  var handleToggleSidenav = function handleToggleSidenav() {\n    setSidenavOpen(!sidenavOpen);\n  };\n\n  useEffect(function () {\n    setSidenavOpen(open);\n  }, [open]);\n\n  if (globalThis.document && sidenavOpen) {\n    var _handle$props;\n\n    var sidenav = document.querySelector(\"#sidenav-root\");\n\n    if (!sidenav) {\n      sidenav = document.createElement(\"div\");\n      sidenav.setAttribute(\"id\", \"sidenav-root\");\n      document.body.appendChild(sidenav);\n    }\n\n    return __jsx(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/createPortal(__jsx(StyledSidenav, {\n      open: sidenavOpen,\n      width: width,\n      position: position,\n      scroll: scroll,\n      onClick: toggleSidenav || handleToggleSidenav,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"sidenav-content\",\n      onClick: handleModalContentClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, children)), sidenav), handle && /*#__PURE__*/cloneElement(handle, {\n      className: ((_handle$props = handle.props) === null || _handle$props === void 0 ? void 0 : _handle$props.className) + \" cursor-pointer\",\n      onClick: toggleSidenav || handleToggleSidenav\n    }));\n  } else return handle && /*#__PURE__*/cloneElement(handle, {\n    className: ((_handle$props2 = handle.props) === null || _handle$props2 === void 0 ? void 0 : _handle$props2.className) + \" cursor-pointer\",\n    onClick: toggleSidenav || handleToggleSidenav\n  });\n};\n\n_s(Sidenav, \"MoyyImPgbYRtwcYRJsmeQ0jjARc=\");\n\n_c = Sidenav;\nSidenav.defaultProps = {\n  width: 280,\n  position: \"right\",\n  open: false,\n  scroll: false\n};\nexport default Sidenav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidenav\");","map":{"version":3,"sources":["D:/CODE/j_fr_frontend/src/components/sidenav/Sidenav.tsx"],"names":["React","cloneElement","Fragment","useEffect","useState","createPortal","StyledSidenav","Sidenav","position","open","width","scroll","handle","children","toggleSidenav","sidenavOpen","setSidenavOpen","handleModalContentClick","e","stopPropagation","handleToggleSidenav","globalThis","document","sidenav","querySelector","createElement","setAttribute","body","appendChild","className","props","onClick","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,YAAhB,EAA8BC,QAA9B,EAAwCC,SAAxC,EAAmDC,QAAnD,QAAmE,OAAnE;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAWA,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,OAQlC;AAAA;;AAAA;;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,aACI,QADJA,aACI;;AAAA,kBACkCV,QAAQ,CAACK,IAAD,CAD1C;AAAA,MACGM,WADH;AAAA,MACgBC,cADhB;;AAEJ,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,CAAD,EAAO;AACrCA,IAAAA,CAAC,CAACC,eAAF;AACD,GAFD;;AAIA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCJ,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,cAAc,CAACP,IAAD,CAAd;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,MAAIY,UAAU,CAACC,QAAX,IAAuBP,WAA3B,EAAwC;AAAA;;AACtC,QAAIQ,OAAO,GAAGD,QAAQ,CAACE,aAAT,CAAuB,eAAvB,CAAd;;AAEA,QAAI,CAACD,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAGD,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAV;AACAF,MAAAA,OAAO,CAACG,YAAR,CAAqB,IAArB,EAA2B,cAA3B;AACAJ,MAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BL,OAA1B;AACD;;AAED,WACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACGlB,YAAY,CACX,MAAC,aAAD;AACE,MAAA,IAAI,EAAEU,WADR;AAEE,MAAA,KAAK,EAAEL,KAFT;AAGE,MAAA,QAAQ,EAAEF,QAHZ;AAIE,MAAA,MAAM,EAAEG,MAJV;AAKE,MAAA,OAAO,EAAEG,aAAa,IAAIM,mBAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,OAAO,EAAEH,uBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,QADH,CAPF,CADW,EAYXU,OAZW,CADf,EAgBGX,MAAM,iBACLX,YAAY,CAACW,MAAD,EAAS;AACnBiB,MAAAA,SAAS,EAAE,kBAAAjB,MAAM,CAACkB,KAAP,gEAAcD,SAAd,IAA0B,iBADlB;AAEnBE,MAAAA,OAAO,EAAEjB,aAAa,IAAIM;AAFP,KAAT,CAjBhB,CADF;AAwBD,GAjCD,MAkCE,OACER,MAAM,iBACNX,YAAY,CAACW,MAAD,EAAS;AACnBiB,IAAAA,SAAS,EAAE,mBAAAjB,MAAM,CAACkB,KAAP,kEAAcD,SAAd,IAA0B,iBADlB;AAEnBE,IAAAA,OAAO,EAAEjB,aAAa,IAAIM;AAFP,GAAT,CAFd;AAOH,CA/DD;;GAAMb,O;;KAAAA,O;AAiENA,OAAO,CAACyB,YAAR,GAAuB;AACrBtB,EAAAA,KAAK,EAAE,GADc;AAErBF,EAAAA,QAAQ,EAAE,OAFW;AAGrBC,EAAAA,IAAI,EAAE,KAHe;AAIrBE,EAAAA,MAAM,EAAE;AAJa,CAAvB;AAOA,eAAeJ,OAAf","sourcesContent":["import React, { cloneElement, Fragment, useEffect, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { StyledSidenav } from \"./SidenavStyle\";\r\n\r\nexport interface SidenavProps {\r\n  position?: \"left\" | \"right\";\r\n  open?: boolean;\r\n  width?: number;\r\n  scroll?: boolean;\r\n  handle: React.ReactElement;\r\n  toggleSidenav?: () => void;\r\n}\r\n\r\nconst Sidenav: React.FC<SidenavProps> = ({\r\n  position,\r\n  open,\r\n  width,\r\n  scroll,\r\n  handle,\r\n  children,\r\n  toggleSidenav,\r\n}) => {\r\n  const [sidenavOpen, setSidenavOpen] = useState(open);\r\n  const handleModalContentClick = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleToggleSidenav = () => {\r\n    setSidenavOpen(!sidenavOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSidenavOpen(open);\r\n  }, [open]);\r\n\r\n  if (globalThis.document && sidenavOpen) {\r\n    let sidenav = document.querySelector(\"#sidenav-root\");\r\n\r\n    if (!sidenav) {\r\n      sidenav = document.createElement(\"div\");\r\n      sidenav.setAttribute(\"id\", \"sidenav-root\");\r\n      document.body.appendChild(sidenav);\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        {createPortal(\r\n          <StyledSidenav\r\n            open={sidenavOpen}\r\n            width={width}\r\n            position={position}\r\n            scroll={scroll}\r\n            onClick={toggleSidenav || handleToggleSidenav}\r\n          >\r\n            <div className=\"sidenav-content\" onClick={handleModalContentClick}>\r\n              {children}\r\n            </div>\r\n          </StyledSidenav>,\r\n          sidenav\r\n        )}\r\n\r\n        {handle &&\r\n          cloneElement(handle, {\r\n            className: handle.props?.className + \" cursor-pointer\",\r\n            onClick: toggleSidenav || handleToggleSidenav,\r\n          })}\r\n      </Fragment>\r\n    );\r\n  } else\r\n    return (\r\n      handle &&\r\n      cloneElement(handle, {\r\n        className: handle.props?.className + \" cursor-pointer\",\r\n        onClick: toggleSidenav || handleToggleSidenav,\r\n      })\r\n    );\r\n};\r\n\r\nSidenav.defaultProps = {\r\n  width: 280,\r\n  position: \"right\",\r\n  open: false,\r\n  scroll: false,\r\n};\r\n\r\nexport default Sidenav;\r\n"]},"metadata":{},"sourceType":"module"}