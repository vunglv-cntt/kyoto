{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\j_fr_frontend\\\\src\\\\components\\\\modal\\\\Modal.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { cloneElement } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport FlexBox from \"../FlexBox\";\nimport StyledModal from \"./ModalStyle\";\n\nvar Modal = function Modal(_ref) {\n  var children = _ref.children,\n      open = _ref.open,\n      onClose = _ref.onClose;\n\n  var handleModalContentClick = function handleModalContentClick(e) {\n    e.stopPropagation();\n  };\n\n  var handleBackdropClick = function handleBackdropClick() {\n    if (onClose) onClose();\n  };\n\n  if (globalThis.document && open) {\n    var modal = document.querySelector(\"#modal-root\");\n\n    if (!modal) {\n      modal = document.createElement(\"div\");\n      modal.setAttribute(\"id\", \"modal-root\");\n      document.body.appendChild(modal);\n    }\n\n    return /*#__PURE__*/createPortal(__jsx(StyledModal, {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      onClick: handleBackdropClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, __jsx(FlexBox, {\n      justifyContent: \"center\",\n      m: \"0.5rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/cloneElement(children, {\n      onClick: handleModalContentClick\n    })))), modal);\n  } else return null;\n};\n\n_c = Modal;\nModal.defaultProps = {\n  open: false\n};\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["D:/CODE/j_fr_frontend/src/components/modal/Modal.tsx"],"names":["React","cloneElement","createPortal","FlexBox","StyledModal","Modal","children","open","onClose","handleModalContentClick","e","stopPropagation","handleBackdropClick","globalThis","document","modal","querySelector","createElement","setAttribute","body","appendChild","onClick","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,YAAhB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAQA,IAAMC,KAA2B,GAAG,SAA9BA,KAA8B,OAAiC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACnE,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,CAAD,EAAO;AACrCA,IAAAA,CAAC,CAACC,eAAF;AACD,GAFD;;AAIA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,QAAIJ,OAAJ,EAAaA,OAAO;AACrB,GAFD;;AAIA,MAAIK,UAAU,CAACC,QAAX,IAAuBP,IAA3B,EAAiC;AAC/B,QAAIQ,KAAK,GAAGD,QAAQ,CAACE,aAAT,CAAuB,aAAvB,CAAZ;;AAEA,QAAI,CAACD,KAAL,EAAY;AACVA,MAAAA,KAAK,GAAGD,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAR;AACAF,MAAAA,KAAK,CAACG,YAAN,CAAmB,IAAnB,EAAyB,YAAzB;AACAJ,MAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BL,KAA1B;AACD;;AAED,wBAAOb,YAAY,CACjB,MAAC,WAAD;AACE,MAAA,aAAa,EAAC,QADhB;AAEE,MAAA,UAAU,EAAC,QAFb;AAGE,MAAA,OAAO,EAAEU,mBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAS,MAAA,cAAc,EAAC,QAAxB;AAAiC,MAAA,CAAC,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACGX,YAAY,CAACK,QAAD,EAAW;AACtBe,MAAAA,OAAO,EAAEZ;AADa,KAAX,CADf,CADF,CALF,CADiB,EAcjBM,KAdiB,CAAnB;AAgBD,GAzBD,MAyBO,OAAO,IAAP;AACR,CAnCD;;KAAMV,K;AAqCNA,KAAK,CAACiB,YAAN,GAAqB;AACnBf,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,eAAeF,KAAf","sourcesContent":["import React, { cloneElement } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport FlexBox from \"../FlexBox\";\r\nimport StyledModal from \"./ModalStyle\";\r\n\r\nexport interface ModalProps {\r\n  open?: boolean;\r\n  children?: React.ReactElement;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = ({ children, open, onClose }) => {\r\n  const handleModalContentClick = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleBackdropClick = () => {\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  if (globalThis.document && open) {\r\n    let modal = document.querySelector(\"#modal-root\");\r\n\r\n    if (!modal) {\r\n      modal = document.createElement(\"div\");\r\n      modal.setAttribute(\"id\", \"modal-root\");\r\n      document.body.appendChild(modal);\r\n    }\r\n\r\n    return createPortal(\r\n      <StyledModal\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        onClick={handleBackdropClick}\r\n      >\r\n        <div className=\"container\">\r\n          <FlexBox justifyContent=\"center\" m=\"0.5rem\">\r\n            {cloneElement(children, {\r\n              onClick: handleModalContentClick,\r\n            })}\r\n          </FlexBox>\r\n        </div>\r\n      </StyledModal>,\r\n      modal\r\n    );\r\n  } else return null;\r\n};\r\n\r\nModal.defaultProps = {\r\n  open: false,\r\n};\r\n\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}