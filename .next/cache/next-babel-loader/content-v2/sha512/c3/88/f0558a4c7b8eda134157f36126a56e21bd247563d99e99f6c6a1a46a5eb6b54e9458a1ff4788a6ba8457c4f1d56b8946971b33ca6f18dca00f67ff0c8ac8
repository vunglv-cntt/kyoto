{"ast":null,"code":"var combineReducers = function combineReducers(reducers) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    var newState = {};\n\n    for (var key in reducers) {\n      newState[key] = reducers[key](state[key], action);\n    }\n\n    return newState;\n  };\n};\n\nexport default combineReducers;","map":{"version":3,"sources":["D:/CODE/j_fr_frontend/src/reducers/combineReducers.ts"],"names":["combineReducers","reducers","state","action","newState","key"],"mappings":"AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAc;AACpC,SAAO,YAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;AAC7B,QAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAK,IAAIC,GAAT,IAAgBJ,QAAhB,EAA0B;AACxBG,MAAAA,QAAQ,CAACC,GAAD,CAAR,GAAgBJ,QAAQ,CAACI,GAAD,CAAR,CAAcH,KAAK,CAACG,GAAD,CAAnB,EAA0BF,MAA1B,CAAhB;AACD;;AACD,WAAOC,QAAP;AACD,GAND;AAOD,CARD;;AAUA,eAAeJ,eAAf","sourcesContent":["const combineReducers = (reducers) => {\r\n  return (state = {}, action) => {\r\n    const newState = {};\r\n    for (let key in reducers) {\r\n      newState[key] = reducers[key](state[key], action);\r\n    }\r\n    return newState;\r\n  };\r\n};\r\n\r\nexport default combineReducers;\r\n"]},"metadata":{},"sourceType":"module"}